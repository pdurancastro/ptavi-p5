 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.


2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
    954

 ** ¿Cuánto tiempo dura la captura? 
    56.149345 segundos

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes? 192.168.1.34. Privada. Porque su rango de IP pertenece a la clase privada de IPv4 de los bloques de 16 bits la cual abarca desde 192.168.0.0-192.168.255.255



3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real? 
    UDP-96.2%, TCP 2.1%, por lo tanto es mayor UDP. Si tiene sentido porque cuando quiero transmitir a tiempo real es mas importante la velocidad que la calidad por eso utilizo UDP
    
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos? 
    ARP, CLASSIC-STUN, DNS, H.261, HTTP, ICMP, RTCP, RTP, SIP, SIP/SDP



4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos? 
    En t=7, t=14, t=16, t=37-40, t=55
    
 ** Y los paquetes con RTP, ¿cuándo se envían? 
    En t=18, t=22, t=25, t=29, t=33, t=35-36
    Para el apartado anterior me fijo en los picos de las gráficas y estos me dan dichos tiempos



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas? 
    DNS
    
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga? 
    80.58.61.250 Es el servidor al que le estoy haciendo la petición de DNS por eso se llama servidor de nombres
    
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres? 
    86.64.162.35
    
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa? 
    Para tener la localización de Ekiga en caso de que la IP se cambie hago la petición para tener su localización constante



6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo? 
    http://ekiga.net/ip/
    
 ** ¿Qué user agent (UA) la está pidiendo? 
    Ekiga
    
 ** ¿Qué devuelve el servidor? 
    El texto con la IP de como ve al cliente.
    
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor? 
    Mi IP de cliente en este caso pública puesto que los ordenadores de la universidad la tienen así. En mi caso es 212.128.254.138 puedo comprobarlo mediante el comando ifconfig en el terminal y en el apartado enp5s0 puedo ver la inet: 212.128.254.138



7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia. 
    El protocolo STUN permite a clientes NAT encontrar su dirección IP pública, el tipo de NAT en el que se encuentra y el puerto asociado con el puerto local a través del NAT. Nuestro cliente quiere información del NAT y por ello utiliza este protocolo.
    
 ** ¿Estamos tras un NAT? 
    La dirección IP 194.39.182.241 si es de un NAT



8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    86.64.162.35
    
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    5063
 
 ** ¿Qué método SIP utiliza el UA para registrarse?
    REGISTER
 
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
    INVITE, ACK, BYE, CANCEL, OPTIONS,NOTIFY, REFER, MESSAGE



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
    No la petición es rechazada en la trama 50 Status: 401 Unauthorized
 
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    Cuando el servidor manda un mensaje SIP de respuesta al cliente con 200 OK
 
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    El primer paquete ocupa 523 bytes mientras que el segundo ocupa 712 bytes, esto es debido a que el primer paquete carece del campo Authorization.
 
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    3600 segundos
    
    

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    Observamos el paquete numero 84 el cual corresponde al INVITE y nos percatamos de como aparecen dichos datos. En Session initiation Protocol-> Message Header -> From -> "Gregorio Robles" <sip_grex@ekiga.net>
    
    
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
    La descripcion de la sesión SDP la cual contiene las siguientes cabeceras: Owner/Creator, Connection Infotmation(c), Time Description, active time(t), Media Attribute(a), Media Description.
    El protocolo o formato utilizado es SDP.
 
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    No, debido a que la respuesta del servidor es 407 Proxy Authentication Required, es decir le falta dicha cabecera. 
 
 
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    El segundo invite tiene la cabecera Proxy-Authentication requisito que debe cumplirse para que se mande de manera adecuada.



11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    RTP,H.261
    RTP es un protocolo que se encarga de la transmision de información en tiempo real.
    H.261 es un protocolo que sirve para manejar paquetes que contengan archivos como vídeos.
 
 ** ¿Cuál es el tamaño de paquete de los mismos?
    RTP = 214 bytes
     
 ** ¿Se utilizan bits de padding?
    Podemos ver en los paquetes RTP Padding:False, es decir no se utilizan bits de relleno en el protocolo. 
 
 
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    Cada 0.024 s = 24 ms se manda un paquete RTP
 
 ** ¿Cuántos bits/segundo estamos enviando?
    Para saber mi tamaño del paquete sin cabeceras pincho en RTP->Payload y me mostrará que tengo 160 bytes en cada paquete. Paso los bytes a bits multiplicando 160*8 = 1280 bits
    
    Realizo una regla de 3 si: 
    0.02s ----> 64.000 bits
    1s -------> x               x = 64.000 bits por segundo = 64 Kbits por segundo       



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
    Telephony -> RTP Streams. Puedo Observar 2 flujos de paquetes RTP
    Miro los valores de Payload:
    
    h261 Paquetes de Vídeo 5014
    g711A Paquetes de Audio 5010
 
 
 ** ¿Cuántos paquetes se pierden?
    Un 0% de los paquetes.
    
    
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
    Para el flujo de Vídeo es 1290.479 ms y para el flujo de Audio es 1290.444 ms
    Delta representa la diferencia de tiempo entre el paquete actual y el paquete anterior. Delta máximo es la mayor diferencia de tiempo.
 
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    
    Jitter medio:
        Vídeo: 153.240 ms
        Audio: 42.500 ms
    
    Jitter máximo:
        Vídeo: 183.096 ms
        Audio: 119.635 ms 
        
    La variación del retardo media de todos los paquetes de vídeo es de 153.24 ms y de audio 42.500ms
    
    El retardo máximo en los paquetes de Vídeo es de 183.096 ms y en los paquetes de audio 119.635 ms     
    
    No tenemos calidad en la conversación ya que estamos recibiendo paquetes tarde (miramos la gráfica) y no tiene buena pinta.


13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.

    Filtro por udp.port==5010
    O selecciono para analizar solo el Audio

 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
    delta = 0 ms
    jitter = 0 ms     
    Si porque al ser el valor de delta y del jitter 0 quiere decir que no tienen un valor previo con el que comparar por eso estos paquetes serán los primeros.
    
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
    Observamos que es el paquete 113. Es el primer paquete que nos llegó de RTP pero no de la captura.
 
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    Hasta el paquete 247
 
 ** ¿A qué se debe el cambio tan brusco del jitter?
    El valor de delta aumento muchísimo y disminuye el ancho de banda(62.40->28.80).  
  
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
    Sabiendo que delta es la diferencia de tiempo de llegada entre el paquete anterior y el actual, esto implica un retardo mayor es decir el incremento del jitter porque ha tenido que esperar más ya que dispone de menos recursos para mandar sus datos.
    
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
    Delta es la diferencia de tiempo de llegada entre el paquete anterior y el actual por lo tanto repercute en el jitter directamente ya que este es la variacion del retardo de los paquetes.
 


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
    38-17 = 21 s aproximadamente
 
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
    Audio SSRC = 0xbf4afd37, Video SSRC = 0x43306582 // Uno para el audio y otro para el vídeo // No


15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
    BYE
 
 ** ¿En qué trama(s)?
    924,925,927 y 933
       
 ** ¿Por qué crees que se envía varias veces?
    Porque no recibe el 200 OK del servidor hasta un tiempo después y el cliente quiere cerrar la sesión.
 
 

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    Aparece una instrucción pero con la cabecera Expires: 0 para que el servidor dé de baja al cliente.
 
 
 ** ¿En qué trama sucede esto?
    Tanto en la 950 como en la 952 solo que a la primera trama le falta la cabecera Authorization y por ello se aplicará en la segunda
 
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    Como bien dije anteriormente al inicio de sesión el primer REGISTER tiene una cabecera Expires es de valor 3600 y en la última de valor 0
 



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. sip:music@iptel.net Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 ** ¿Son diferentes el registro y la descripción de la sesión?


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 ** ¿Cuál es su periodicidad?
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
